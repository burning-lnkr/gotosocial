# Version 2 of GoReleaser: https://goreleaser.com/errors/version/
version: 2
project_name: gotosocial

# https://goreleaser.com/customization/hooks/
before:
  hooks:
  # generate the swagger.yaml file using go-swagger and bundle it into the assets directory
  - go run ./vendor/github.com/go-swagger/go-swagger/cmd/swagger generate spec --scan-models --exclude-deps -o web/assets/swagger.yaml
  - sed -i "s/REPLACE_ME/{{ incpatch .Version }}/" web/assets/swagger.yaml
  # Install web deps + bundle web assets
  - yarn --cwd ./web/source install
  - yarn --cwd ./web/source ts-patch install # https://typia.io/docs/setup/#manual-setup
  - yarn --cwd ./web/source build

# https://goreleaser.com/customization/build/
builds:
  # DEFAULT WASM BINARY BUILDS
  -
    id: gotosocial
    main: ./cmd/gotosocial
    binary: gotosocial
    ldflags:
      - -s
      - -w
      - -extldflags
      - -static
      - -X main.Version={{.Version}}
    tags:
      - netgo
      - osusergo
      - static_build
      - kvformat
      - timetzdata
      - >-
        {{ if and (index .Env "DEBUG") (.Env.DEBUG) }}debugenv{{ end }}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"

# https://goreleaser.com/customization/archive/
archives:
  # DEFAULT WASM BUILD
  -
    id: gotosocial
    builds:
      - gotosocial
    files:
    # standard release files
    - LICENSE
    - README.md
    - CHANGELOG*
    # web stuff minus source
    - web/assets
    - web/template
    # example config files
    - example/config.yaml
    - example/gotosocial.service
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}"
  # NOWASM BUILD
  -
    id: gotosocial_nowasm
    builds:
      - gotosocial_nowasm
    files:
    # standard release files
    - LICENSE
    - README.md
    - CHANGELOG*
    # web stuff minus source
    - web/assets
    - web/template
    # example config files
    - example/config.yaml
    - example/gotosocial.service
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 \"v1\") }}{{ .Amd64 }}{{ end }}_nowasm"
  -
    id: web-assets
    files:
    - LICENSE
    # just the web stuff minus source
    - web/assets
    - web/template
    meta: true
    name_template: "{{ .ProjectName }}_{{ .Version }}_web-assets"

# https://goreleaser.com/customization/checksum/
checksum:
  name_template: 'checksums.txt'

# https://goreleaser.com/customization/snapshots/
snapshot:
  version_template: "{{ incpatch .Version }}-SNAPSHOT"

# https://goreleaser.com/customization/source/
source:
  enabled: false
  name_template: "{{ .ProjectName }}-{{ .Version }}-source-code"

# https://goreleaser.com/customization/release/
release:
  draft: true
  prerelease: auto
  header: |
    Here's version {{ .Version }} of GoToSocial (Burning Fork).

# https://goreleaser.com/customization/changelog/
changelog:
  use: github
  groups:
    - title: Features and performance
      regexp: '^.*\[(?:feature|performance).*\].*$'
      order: 0
    - title: Bug fixes
      regexp: '^.*\[bug.*\].*$'
      order: 1
    - title: Chores & version bumps
      regexp: '^.*\[chore.*\].*$'
      order: 2
    - title: Documentation
      regexp: '^.*\[doc.*\].*$'
      order: 3
    - title: Other
      order: 999
